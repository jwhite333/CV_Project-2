
% Load images
f_sigma = 1.4;
images = [];
for image_num = 1:3
    image_name = sprintf('DanaHallWay1/DSC_028%d.JPG',image_num);
    images = cat(3,images, imgaussfilt(imread(image_name),f_sigma));
end

% Get size
dim = size(images);
x_max = dim(1);
y_max = dim(2);
image_num = dim(3);

% Calculate derivatives
mask_x = [-1,0,1;-1,0,1;-1,0,1];
mask_y = [1,1,1;0,0,0;-1,-1,-1];
gx = zeros(x_max,y_max,image_num);
gy = zeros(x_max,y_max,image_num);
for counter = 1:image_num
    [gx(:,:,counter),gy(:,:,counter)] = imgradientxy(images(:,:,counter));
end

%{
figure(1)
imshow(images(:,:,1));
figure(2)
imshow(gx(:,:,1));
figure(3)
imshow(gy(:,:,1));
%}

% Classification parameters
t_magnitude = 7;
t_similatity = 1;

% Classification
corners = zeros(x_max,y_max,image_num);
x_edges = zeros(x_max,y_max,image_num);
y_edges = zeros(x_max,y_max,image_num);
for counter = 1:image_num
    for x = 1:x_max
        for y = 1:y_max
            % Create M
            M = [0,0;0,0];
            for i = -1:1
                for j = -1:1
                    M(0,0) = M(0,0) + gx(x,y,counter)^2;
                    M(0,1) = M(0,1) + gx(x,y,counter)*gy(x,y,counter);
                    M(1,0) = M(1,0) + gx(x,y,counter)*gy(x,y,counter);
                    M(1,1) = M(1,1) + gy(x,y,counter)^2;
                    
                end
            end
            % Make decision
            [V,D] = eig(M);
            if D(1,1) > 10 && D(2,2) > 10
                corners(x,y,counter) = 1;
            elseif D(1,1) > 10
                x_edges(x,y,counter) = 1;
            elseif D(2,2) > 10
                y_edges(x,y,counter) = 1;
            end
        end
    end
end
